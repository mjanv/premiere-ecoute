<Layouts.app flash={@flash} current_scope={assigns[:current_scope] || %{}} current_page="votes">
  <div class="min-h-screen synthwave-bg text-white">
    <!-- Header -->
    <div class="bg-gray-900 border-b border-gray-800">
      <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 py-2">
        <div class="flex items-center justify-center space-x-4">
          <!-- Navigation Arrows and Period Display -->
          <button
            phx-click="navigate"
            phx-value-direction="previous"
            class="bg-gray-800 hover:bg-gray-700 text-white px-4 py-2 rounded-lg transition-colors"
          >
            &lt;
          </button>

          <div class="px-8 py-3 rounded-lg text-white font-medium min-w-64 text-center text-xl">
            <%= if @selected_period == :month do %>
              {Date.new!(@selected_year, @selected_month, 1) |> Calendar.strftime("%B")} {@selected_year}
            <% else %>
              {@selected_year}
            <% end %>
          </div>

          <button
            phx-click="navigate"
            phx-value-direction="next"
            class="bg-gray-800 hover:bg-gray-700 text-white px-4 py-2 rounded-lg transition-colors"
          >
            &gt;
          </button>
          
<!-- Period Toggle -->
          <div class="ml-8 flex items-center">
            <div class="bg-gray-800 rounded-lg p-1 flex">
              <button
                phx-click={if @selected_period != :month, do: "toggle_period"}
                class={"px-4 py-2 rounded-md font-medium transition-colors #{if @selected_period == :month, do: "bg-gray-700 text-white", else: "text-gray-400 hover:text-white"}"}
              >
                {gettext("Month")}
              </button>
              <button
                phx-click={if @selected_period != :year, do: "toggle_period"}
                class={"px-4 py-2 rounded-md font-medium transition-colors #{if @selected_period == :year, do: "bg-gray-700 text-white", else: "text-gray-400 hover:text-white"}"}
              >
                {gettext("Year")}
              </button>
            </div>
          </div>
        </div>
      </div>
    </div>
    
<!-- Album Cover Wall with Votes -->
    <div class="max-w-7xl mx-auto px-4 sm:px-6 lg:px-8 pb-8">
      <.async_result :let={votes_data} assign={@votes_data}>
        <:loading>
          <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
            <%= for _ <- 1..12 do %>
              <div class="animate-pulse">
                <div class="bg-gray-800 aspect-square w-full"></div>
              </div>
            <% end %>
          </div>
        </:loading>

        <:failed>
          <div class="bg-red-900/20 border border-red-800 rounded-lg p-8 text-center">
            <p class="text-red-400 text-lg">{gettext("Failed to load votes")}</p>
            <p class="text-gray-400 mt-2">{gettext("Please try refreshing the page")}</p>
          </div>
        </:failed>

        <%= if Enum.empty?(votes_data) do %>
          <div class="p-8 text-center">
            <svg class="w-16 h-16 text-gray-600 mx-auto mb-4" fill="currentColor" viewBox="0 0 20 20">
              <path d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" />
            </svg>
            <h3 class="text-lg font-medium text-gray-300 mb-2">{gettext("No Votes Found")}</h3>
            <p class="text-gray-400">{gettext("No votes cast during this period")}</p>
          </div>
        <% else %>
          <!-- AIDEV-NOTE: Display votes with clickable album covers showing voter score -->
          <div class="grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
            <%= for vote_data <- votes_data do %>
              <div
                class="group cursor-pointer transform transition-all duration-200 hover:scale-105"
                phx-click="show_album_details"
                phx-value-album_id={vote_data.album.id}
              >
                <!-- Album Cover with Voter Score Overlay -->
                <div class="relative">
                  <img
                    src={vote_data.album.cover_url}
                    alt={gettext("Album cover")}
                    class="w-full aspect-square object-cover group-hover:blur-xs transition-all duration-200"
                  />
                  <!-- Centered Large Voter Score -->
                  <div class="absolute inset-0 flex items-center justify-center p-2">
                    <div
                      class="text-white group-hover:text-white/80 font-bold transition-all duration-200 text-center leading-none drop-shadow-2xl max-w-full overflow-hidden"
                      style="font-size: clamp(2rem, 15vw, 6rem); text-shadow: 2px 2px 4px rgba(0,0,0,0.8);"
                    >
                      {vote_data.score}
                    </div>
                  </div>
                </div>
              </div>
            <% end %>
          </div>
        <% end %>
      </.async_result>
    </div>
  </div>
</Layouts.app>

<!-- AIDEV-NOTE: Album Details Modal - Outside layout containers for proper overlay -->
<%= if @show_modal do %>
  <div
    class="fixed inset-0 z-[9999] flex items-center justify-center p-4"
    id="album-details-modal"
    aria-labelledby="modal-title"
    role="dialog"
    aria-modal="true"
  >
    <!-- Background overlay -->
    <div class="absolute inset-0 bg-black/75 backdrop-blur-sm" phx-click="close_modal"></div>
    
<!-- Modal panel -->
    <div class="relative bg-gray-900 rounded-2xl shadow-2xl max-w-4xl w-full max-h-[90vh] overflow-hidden border border-purple-500/20">
      <.async_result :let={modal_data} assign={@modal_data}>
        <:loading>
          <div class="px-6 py-8">
            <div class="flex animate-pulse">
              <div class="w-48 h-48 bg-gray-800 rounded-lg"></div>
              <div class="ml-6 flex-1">
                <div class="h-8 bg-gray-800 rounded w-3/4 mb-4"></div>
                <div class="h-4 bg-gray-800 rounded w-1/2 mb-2"></div>
                <div class="h-4 bg-gray-800 rounded w-1/3"></div>
              </div>
            </div>
          </div>
        </:loading>

        <:failed>
          <div class="px-6 py-8">
            <div class="text-center">
              <p class="text-red-400">{gettext("Failed to load album details")}</p>
              <button
                type="button"
                phx-click="close_modal"
                class="mt-4 px-4 py-2 bg-gray-800 text-white rounded-lg hover:bg-gray-700"
              >
                {gettext("Close")}
              </button>
            </div>
          </div>
        </:failed>

        <%= if modal_data do %>
          <!-- Modal Header - Album info only, no session data -->
          <div class="flex items-start justify-between p-6 border-b border-gray-700">
            <div class="flex items-start space-x-6">
              <img
                src={modal_data.album.cover_url}
                alt={gettext("Album cover")}
                class="w-32 h-32 rounded-lg shadow-lg"
              />
              <div>
                <h2 class="text-3xl font-bold text-white mb-2" id="modal-title">
                  {modal_data.album.name}
                </h2>
                <p class="text-xl text-purple-300 mb-4">{modal_data.album.artist}</p>
                <%= if modal_data.album.release_date do %>
                  <p class="text-sm text-gray-400">
                    {gettext("Released")}: {Calendar.strftime(modal_data.album.release_date, "%B %d, %Y")}
                  </p>
                <% end %>
                <p class="text-sm text-gray-400 mt-2">
                  {modal_data.album.total_tracks} {ngettext("track", "tracks", modal_data.album.total_tracks)}
                </p>
              </div>
            </div>
            <button
              type="button"
              phx-click="close_modal"
              class="ml-4 bg-gray-800 hover:bg-gray-700 text-gray-400 hover:text-white rounded-lg p-2 transition-colors"
            >
              <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
                <path
                  fill-rule="evenodd"
                  d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z"
                  clip-rule="evenodd"
                />
              </svg>
            </button>
          </div>
          
<!-- Track List - Album tracks without scores -->
          <div class="p-6 max-h-96 overflow-y-auto">
            <h3 class="text-lg font-medium text-white mb-4">{gettext("Track List")}</h3>
            <div class="space-y-3">
              <%= for track <- modal_data.album.tracks do %>
                <div class="flex items-center justify-between p-4 bg-gray-800 rounded-lg hover:bg-gray-750 transition-colors">
                  <div class="flex items-center">
                    <span class="text-purple-300 font-medium w-8 text-center">{track.track_number}</span>
                    <div class="ml-4">
                      <p class="text-white font-medium text-lg">{track.name}</p>
                      <%= if track.duration_ms do %>
                        <p class="text-gray-400 text-sm">
                          {timer(track.duration_ms)}
                        </p>
                      <% end %>
                    </div>
                  </div>
                  
                  <!-- AIDEV-NOTE: Display existing viewer votes for this track -->
                  <div class="flex items-center space-x-3">
                    <%= case get_track_votes(@current_user.twitch.user_id, track.id, modal_data.votes_by_track) do %>
                      <% [_ | _] = votes -> %>
                        <div class="flex flex-wrap gap-2">
                          <%= for vote <- votes do %>
                            <div class="bg-purple-600 text-white px-3 py-1 rounded-full text-sm font-medium">
                              {vote.score}
                            </div>
                          <% end %>
                        </div>
                      <% [] -> %>
                        <span class="text-gray-500 text-sm italic">{gettext("No vote")}</span>
                    <% end %>
                  </div>
                </div>
              <% end %>
            </div>
          </div>
        <% else %>
          <div class="px-6 py-8 text-center">
            <p class="text-gray-400">{gettext("Album details not found")}</p>
            <button
              type="button"
              phx-click="close_modal"
              class="mt-4 px-4 py-2 bg-gray-800 text-white rounded-lg hover:bg-gray-700"
            >
              {gettext("Close")}
            </button>
          </div>
        <% end %>
      </.async_result>
    </div>
  </div>
<% end %>
