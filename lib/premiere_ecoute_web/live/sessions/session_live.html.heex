<Layouts.app flash={@flash} current_scope={assigns[:current_scope] || %{}} current_page="my_sessions">
  <div class="synthwave-bg min-h-screen text-white">
    <div class="max-w-7xl mx-auto pt-12 pb-6 px-6 flex items-center">
      <div class="w-2/3">
        <.page_header
          title={ListeningSession.title(@listening_session)}
          subtitle={"#{@listening_session.user.username} - #{PremiereEcouteCore.Date.date(@listening_session.inserted_at)}"}
        />
      </div>
      <div class="w-1/3">
        <.source_details listening_session={@listening_session} />
      </div>
    </div>

    <div class="max-w-7xl mx-auto px-6 flex h-screen">
      <div class="w-1/3 p-6 overflow-y-auto">
        <.gradient_bg class="p-6 mb-6" status={@listening_session.status} statutes={[:preparing, :active]}>
          <.live_component
            module={PremiereEcouteWeb.Sessions.Components.SpotifyPlayer}
            id="spotify-player"
            listening_session={@listening_session}
            player_state={@player_state}
            current_scope={@current_scope}
          />
        </.gradient_bg>

        <.gradient_bg class="p-6">
          <div class="flex items-center space-x-3 mb-4">
            <div class="flex items-center w-full">
              <.status_badge size="sm">{gettext("Vote Format")}: {vote_type_display(@listening_session)}</.status_badge>
              <div class="flex-1"></div>
              <.status_badge status={Atom.to_string(@listening_session.status)} size="sm" />
            </div>
          </div>

          <div class="space-y-3">
            <div class="grid grid-cols-2 gap-4 mb-4">
              <.session_stat show={@show[:scores]} report={@report} base="10" key="viewer_score" legend={gettext("Viewers")} />
              <.session_stat show={@show[:scores]} report={@report} base="10" key="streamer_score" legend={gettext("Streamer")} />
              <.session_stat show={@show[:votes]} report={@report} key="unique_votes" legend={gettext("Total Votes")} />
              <.session_stat show={@show[:votes]} report={@report} key="unique_voters" legend={gettext("Unique Voters")} />
            </div>

            <div class="flex justify-center space-x-6 pt-2">
              <.session_toggle
                phx-click="toggle"
                phx-value-flag="votes"
                checked={@show[:votes]}
                legend={gettext("Display votes")}
              />
              <.session_toggle
                phx-click="toggle"
                phx-value-flag="scores"
                checked={@show[:scores]}
                legend={gettext("Display scores")}
              />
            </div>
            
<!-- Next Track Timer/Slider -->
            <.next_track value={@show[:next_track]} at={@next_track_at} phx-change="update_next_track" />
            
<!-- Overlay link section with dropdown selector -->
            <div class="mt-4 pt-4 border-t border-white/20" id="overlay-hooks">
              <div class="relative">
                <div class="absolute left-3 top-1/2 transform -translate-y-1/2 flex items-center space-x-2 z-10">
                  <form phx-change="change_overlay_score_type" class="flex items-center">
                    <select
                      name="score_type"
                      value={@overlay_score_type}
                      phx-update="ignore"
                      id="select_type"
                      class="text-xs text-purple-200 font-medium bg-transparent border-none focus:outline-none cursor-pointer w-20"
                    >
                      <option value="streamer" class="bg-gray-800 text-white">Streamer</option>
                      <option value="viewer" class="bg-gray-800 text-white">Viewer</option>
                      <option value="both" class="bg-gray-800 text-white">Both</option>
                      <option value="player" class="bg-gray-800 text-white">Player</option>
                    </select>
                  </form>
                  <div class="w-px h-4 bg-white/20"></div>
                </div>
                <input
                  type="text"
                  readonly
                  value={get_current_overlay_url(@socket.host_uri, @listening_session.id, @overlay_score_type)}
                  class="w-full bg-white/10 border border-white/20 rounded-lg pl-30 pr-10 py-2 text-white text-xs font-mono focus:outline-none focus:ring-2 focus:ring-purple-500"
                  id={"overlay-url-input-#{@overlay_score_type}"}
                />
                <div class="absolute right-1 top-1 bottom-1 flex space-x-1">
                  <div id="open-url-hook" phx-hook="OpenUrl">
                    <button
                      phx-click="open_overlay"
                      class="bg-purple-600 hover:bg-purple-700 text-white px-2 py-1 rounded transition-colors flex items-center justify-center h-full"
                      title={gettext("Open overlay in new tab")}
                    >
                      <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
                        />
                      </svg>
                    </button>
                  </div>
                </div>
              </div>
            </div>
            
<!-- Session control buttons for start/end listening session -->
            <div class="mt-4 pt-4 border-t border-white/20">
              <div class="flex space-x-2">
                <%= if @listening_session.status == :preparing do %>
                  <button
                    phx-click="start_session"
                    class="flex-1 bg-gradient-to-r from-emerald-500 to-teal-600 hover:from-emerald-600 hover:to-teal-700 text-white py-2 px-4 rounded-lg font-medium transition-all duration-200 text-sm flex items-center justify-center space-x-2 shadow-md hover:shadow-lg"
                  >
                    <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                      <path
                        fill-rule="evenodd"
                        d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z"
                        clip-rule="evenodd"
                      />
                    </svg>
                    <span>{gettext("Start Session")}</span>
                  </button>
                <% end %>

                <%= if @listening_session.status == :active do %>
                  <button
                    phx-click="stop_session"
                    class="flex-1 bg-red-600 hover:bg-red-700 text-white py-2 px-4 rounded-lg font-medium transition-colors text-sm flex items-center justify-center space-x-2"
                  >
                    <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                      <path
                        fill-rule="evenodd"
                        d="M10 18a8 8 0 100-16 8 8 0 000 16zM8 7a1 1 0 000 2h4a1 1 0 100-2H8z"
                        clip-rule="evenodd"
                      />
                    </svg>
                    <span>{gettext("End Session")}</span>
                  </button>
                <% end %>

                <%= if @listening_session.status == :stopped do %>
                  <.link
                    navigate={~p"/sessions/#{@listening_session.id}/retrospective"}
                    class="flex-1 bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white py-2 px-4 rounded-lg font-medium text-sm flex items-center justify-center space-x-2 shadow-lg transition-all"
                    target="_blank"
                  >
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2-2V7a2 2 0 012-2h2a2 2 0 002 2v6a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 00-2 2h-2a2 2 0 00-2 2v6a2 2 0 01-2 2H9z"
                      />
                    </svg>
                    <span>{gettext("View Retrospective")}</span>
                  </.link>
                <% end %>
              </div>
            </div>
          </div>
        </.gradient_bg>
      </div>
      
<!-- Right Column - Track List (2/3) -->
      <div class="w-2/3 p-6 overflow-y-auto">
        <.vote_bar listening_session={@listening_session} open_vote={@open_vote} user_current_rating={@user_current_rating} />

        <%= if @show[:scores] do %>
          <.gradient_bg status={@listening_session.status} statutes={[:active, :stopped]}>
            <.note_graph listening_session={@listening_session} trends={@vote_trends} />
          </.gradient_bg>
        <% end %>

        <div class="mb-6 mt-8">
          <%= if length(ListeningSession.tracks(@listening_session)) > 0 do %>
            <div class="flex flex-col space-y-3">
              <%= for {track, index} <- Enum.with_index(ListeningSession.tracks(@listening_session), 1) do %>
                <div class={[
                  "rounded-lg transition-colors overflow-hidden",
                  if(ListeningSession.current?(@listening_session, track),
                    do:
                      if(@open_vote,
                        do: "order-first border-2 border-green-500/50",
                        else: "order-first border-2 border-orange-500/50"
                      ),
                    else: "border-purple-300/50 border-2 hover:bg-purple-300/30"
                  )
                ]}>
                  <!-- Track Row with Green Background -->
                  <div class={[
                    "p-4 transition-colors",
                    if(ListeningSession.current?(@listening_session, track),
                      do:
                        if(@open_vote,
                          do: "bg-green-600/20 hover:bg-green-600/30",
                          else: "bg-orange-600/20 hover:bg-orange-600/30"
                        ),
                      else: ""
                    )
                  ]}>
                    <div class="flex items-center justify-between">
                      <div class="flex items-center space-x-4 flex-1 min-w-0">
                        <%= if ListeningSession.current?(@listening_session, track) do %>
                          <span class={[
                            "text-lg w-8 flex-shrink-0 font-medium",
                            if(@open_vote, do: "text-green-400", else: "text-orange-400")
                          ]}>
                            {index}
                          </span>
                        <% else %>
                          <span class="text-lg text-gray-400 w-8 flex-shrink-0">{Map.get(track, :track_number, index)}</span>
                        <% end %>
                        <div class="flex-1 min-w-0">
                          <h4 class={[
                            "font-medium text-lg truncate",
                            if(ListeningSession.current?(@listening_session, track),
                              do: if(@open_vote, do: "text-green-300", else: "text-orange-300"),
                              else: "text-white"
                            )
                          ]}>
                            {track.name}
                          </h4>
                          <p class={[
                            "text-sm",
                            if(ListeningSession.current?(@listening_session, track),
                              do: if(@open_vote, do: "text-green-400", else: "text-orange-400"),
                              else: "text-gray-400"
                            )
                          ]}>
                            {PremiereEcouteCore.Duration.timer(track.duration_ms)}
                          </p>
                        </div>
                      </div>

                      <div class="flex items-center space-x-8 text-sm flex-shrink-0">
                        <%= if @listening_session.status == :active && ListeningSession.current?(@listening_session, track) do %>
                          <div class="text-center">
                            <div class={[
                              "inline-flex items-center px-2 py-1 rounded text-xs font-medium mb-1",
                              if(@open_vote, do: "bg-green-500/20 text-green-300", else: "bg-orange-500/20 text-orange-300")
                            ]}>
                              <%= if @open_vote do %>
                                {gettext("Open votes")}
                              <% else %>
                                {gettext("Closed votes")}
                              <% end %>
                            </div>
                          </div>
                        <% end %>
                        <%= if @show[:votes] do %>
                          <.session_track_stat
                            report={@report}
                            track={track}
                            key="unique_votes"
                            color="purple"
                            legend={gettext("Votes")}
                          />
                        <% end %>
                        <%= if @show[:scores] do %>
                          <.session_track_stat
                            report={@report}
                            track={track}
                            key="viewer_score"
                            color="pink"
                            legend={gettext("Score")}
                          />
                          <.session_track_stat
                            report={@report}
                            track={track}
                            key="streamer_score"
                            color="emerald"
                            legend={gettext("My Score")}
                          />
                        <% end %>
                      </div>
                    </div>
                  </div>

                  <%= if ListeningSession.current?(@listening_session, track) || @listening_session.status == :stopped do %>
                    <div class="px-4 pt-4 pb-2 bg-gradient-to-br from-slate-900/30 to-gray-900/30 border-t border-slate-500/20">
                      <!-- Horizontal Histogram taking ~80% width -->
                      <div class="flex items-end justify-center h-32 mx-auto w-4/5">
                        <.distribution_graph listening_session={@listening_session} report={@report} track={track} />
                      </div>
                    </div>
                  <% end %>
                </div>
              <% end %>
            </div>
          <% else %>
            <div class="text-center py-16 text-gray-400">
              <svg class="w-16 h-16 mx-auto mb-4 opacity-50" fill="currentColor" viewBox="0 0 20 20">
                <path d="M18 3a1 1 0 00-1.196-.98L3 6.687a1 1 0 000 1.838l4.49 1.497L9.5 14.75a1 1 0 001.838 0L15.014 10H18a1 1 0 001-1V4a1 1 0 00-1-1z" />
              </svg>
              <p>{gettext("No tracks found for this %{source}.", source: Atom.to_string(@listening_session.source))}</p>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</Layouts.app>
