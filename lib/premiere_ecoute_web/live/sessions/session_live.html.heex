<Layouts.app flash={@flash} current_scope={assigns[:current_scope] || %{}} current_page="my_sessions">
  <div class="synthwave-bg min-h-screen text-white">
    
<!-- Page Header -->
    <div class="max-w-7xl mx-auto pt-12 pb-6 px-6 flex items-center">
      <div class="w-2/3">
        <.page_header
          title={ListeningSession.title(@listening_session)}
          subtitle={"#{@listening_session.user.username} - #{PremiereEcouteCore.Date.date(@listening_session.inserted_at)}"}
        />
      </div>
      <div class="w-1/3">
        <.source_details listening_session={@listening_session} />
      </div>
    </div>
    
<!-- Main Content -->
    <div class="max-w-7xl mx-auto px-6 flex h-screen">
      <!-- Left Column - Session & Album Details (1/3) -->
      <div class="w-1/3 p-6 overflow-y-auto">
        
<!-- Session Controls - Only show when session is active -->

        <%= if @listening_session.status in [:preparing, :active] do %>
          <div class="rounded-xl p-6 mb-6 bg-gradient-to-br from-purple-900/80 to-pink-900/80">
            <div>
              <.live_component
                module={PremiereEcouteWeb.Sessions.Components.SpotifyPlayer}
                id="spotify-player"
                listening_session={@listening_session}
                player_state={@player_state}
                current_scope={@current_scope}
              />
            </div>
          </div>
        <% end %>
        
<!-- Session Information -->
        <div class="rounded-xl p-6 mb-6 bg-gradient-to-br from-pink-900/80 to-purple-900/80">
          <div class="flex items-center space-x-3 mb-4">
            <div class="flex items-center w-full">
              <.status_badge status={Atom.to_string(@listening_session.status)} size="sm">
                {gettext("Vote Format")}: {vote_type_display(@listening_session)}
              </.status_badge>
              <div class="flex-1"></div>
              <.status_badge status={Atom.to_string(@listening_session.status)} size="sm" />
            </div>
          </div>

          <div class="space-y-3">
            <div class="grid grid-cols-2 gap-4 mb-4">
              <.session_stat show={@show[:scores]} report={@report} base="10" key="viewer_score" legend={gettext("Viewers")} />
              <.session_stat show={@show[:scores]} report={@report} base="10" key="streamer_score" legend={gettext("Streamer")} />
              <.session_stat show={@show[:votes]} report={@report} key="unique_votes" legend={gettext("Total Votes")} />
              <.session_stat show={@show[:votes]} report={@report} key="unique_voters" legend={gettext("Unique Voters")} />
            </div>

            <div class="flex justify-center space-x-6 pt-2">
              <.session_toggle
                phx-click="toggle"
                phx-value-flag="votes"
                checked={@show[:votes]}
                legend={gettext("Display votes")}
              />
              <.session_toggle
                phx-click="toggle"
                phx-value-flag="scores"
                checked={@show[:scores]}
                legend={gettext("Display scores")}
              />
            </div>
            
<!-- Next Track Timer/Slider -->
            <div class="pt-2">
              <%= if @next_track_at do %>
                <!-- Active Timer - replaces slider when countdown is active -->
                <div class="flex items-center justify-center space-x-2">
                  <span class="text-purple-200 text-xs font-medium">
                    {gettext("Next track in")}
                  </span>
                  <div
                    id="next-track-timer"
                    phx-hook="NextTrackTimer"
                    data-next-track-at={@next_track_at |> DateTime.to_iso8601()}
                    class="bg-purple-600/20 px-2 py-1 rounded border border-purple-500/30"
                  >
                    <span class="font-mono text-sm font-bold text-purple-300" id="timer-display">
                      --:--
                    </span>
                  </div>
                </div>
              <% else %>
                <!-- Slider - shown when no timer is active -->
                <div class="flex items-center space-x-4">
                  <span class="text-purple-200 text-sm font-medium whitespace-nowrap">
                    {gettext("Next track in")}
                  </span>
                  <div class="flex-1 px-1 relative">
                    <form phx-change="update_next_track">
                      <input
                        type="range"
                        name="next_track"
                        min="0"
                        max="60"
                        value={@show[:next_track]}
                        id="next-track-slider"
                        class="w-full h-2 rounded-lg appearance-none cursor-pointer bg-white/20 slider-purple"
                      />
                    </form>
                    <style>
                      .slider-purple::-webkit-slider-thumb {
                        appearance: none;
                        width: 16px;
                        height: 16px;
                        border-radius: 50%;
                        background: #8b5cf6;
                        cursor: pointer;
                        border: 2px solid white;
                        box-shadow: 0 2px 6px rgba(0,0,0,0.2);
                      }
                      .slider-purple::-moz-range-thumb {
                        width: 16px;
                        height: 16px;
                        border-radius: 50%;
                        background: #8b5cf6;
                        cursor: pointer;
                        border: 2px solid white;
                        box-shadow: 0 2px 6px rgba(0,0,0,0.2);
                      }
                      .slider-purple::-webkit-slider-track {
                        height: 8px;
                        border-radius: 4px;
                        background: linear-gradient(to right, #8b5cf6 0%, #8b5cf6 {(@show[:next_track] / 60) * 100}%, rgba(255,255,255,0.2) {(@show[:next_track] / 60) * 100}%, rgba(255,255,255,0.2) 100%);
                      }
                    </style>
                  </div>
                  <span class={[
                    "text-sm font-medium min-w-[60px] text-center",
                    if(@show[:next_track] == 0, do: "text-gray-400", else: "text-white")
                  ]}>
                    <%= if @show[:next_track] == 0 do %>
                      {gettext("Off")}
                    <% else %>
                      {@show[:next_track]}s
                    <% end %>
                  </span>
                </div>
              <% end %>
            </div>
            
<!-- Overlay link section with dropdown selector -->
            <div class="mt-4 pt-4 border-t border-white/20" id="overlay-hooks">
              <div class="relative">
                <div class="absolute left-3 top-1/2 transform -translate-y-1/2 flex items-center space-x-2 z-10">
                  <form phx-change="change_overlay_score_type" class="flex items-center">
                    <select
                      name="score_type"
                      value={@overlay_score_type}
                      phx-update="ignore"
                      id="selectÃ§type"
                      class="text-xs text-purple-200 font-medium bg-transparent border-none focus:outline-none cursor-pointer w-20"
                    >
                      <option value="streamer" class="bg-gray-800 text-white">Streamer</option>
                      <option value="viewer" class="bg-gray-800 text-white">Viewer</option>
                      <option value="both" class="bg-gray-800 text-white">Both</option>
                      <option value="player" class="bg-gray-800 text-white">Player</option>
                    </select>
                  </form>
                  <div class="w-px h-4 bg-white/20"></div>
                </div>
                <input
                  type="text"
                  readonly
                  value={get_current_overlay_url(@socket.host_uri, @listening_session.id, @overlay_score_type)}
                  class="w-full bg-white/10 border border-white/20 rounded-lg pl-30 pr-10 py-2 text-white text-xs font-mono focus:outline-none focus:ring-2 focus:ring-purple-500"
                  id={"overlay-url-input-#{@overlay_score_type}"}
                />
                <div class="absolute right-1 top-1 bottom-1 flex space-x-1">
                  <div id="open-url-hook" phx-hook="OpenUrl">
                    <button
                      phx-click="open_overlay"
                      class="bg-purple-600 hover:bg-purple-700 text-white px-2 py-1 rounded transition-colors flex items-center justify-center h-full"
                      title={gettext("Open overlay in new tab")}
                    >
                      <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                        <path
                          stroke-linecap="round"
                          stroke-linejoin="round"
                          stroke-width="2"
                          d="M10 6H6a2 2 0 00-2 2v10a2 2 0 002 2h10a2 2 0 002-2v-4M14 4h6m0 0v6m0-6L10 14"
                        />
                      </svg>
                    </button>
                  </div>
                </div>
              </div>
            </div>
            
<!-- Session control buttons for start/end listening session -->
            <div class="mt-4 pt-4 border-t border-white/20">
              <div class="flex space-x-2">
                <%= if @listening_session.status == :preparing do %>
                  <button
                    phx-click="start_session"
                    class="flex-1 bg-gradient-to-r from-emerald-500 to-teal-600 hover:from-emerald-600 hover:to-teal-700 text-white py-2 px-4 rounded-lg font-medium transition-all duration-200 text-sm flex items-center justify-center space-x-2 shadow-md hover:shadow-lg"
                  >
                    <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                      <path
                        fill-rule="evenodd"
                        d="M10 18a8 8 0 100-16 8 8 0 000 16zM9.555 7.168A1 1 0 008 8v4a1 1 0 001.555.832l3-2a1 1 0 000-1.664l-3-2z"
                        clip-rule="evenodd"
                      />
                    </svg>
                    <span>{gettext("Start Session")}</span>
                  </button>
                <% end %>

                <%= if @listening_session.status == :active do %>
                  <button
                    phx-click="stop_session"
                    class="flex-1 bg-red-600 hover:bg-red-700 text-white py-2 px-4 rounded-lg font-medium transition-colors text-sm flex items-center justify-center space-x-2"
                  >
                    <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
                      <path
                        fill-rule="evenodd"
                        d="M10 18a8 8 0 100-16 8 8 0 000 16zM8 7a1 1 0 000 2h4a1 1 0 100-2H8z"
                        clip-rule="evenodd"
                      />
                    </svg>
                    <span>{gettext("End Session")}</span>
                  </button>
                <% end %>

                <%= if @listening_session.status == :stopped do %>
                  <.link
                    navigate={~p"/sessions/#{@listening_session.id}/retrospective"}
                    class="flex-1 bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white py-2 px-4 rounded-lg font-medium text-sm flex items-center justify-center space-x-2 shadow-lg transition-all"
                    target="_blank"
                  >
                    <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                      <path
                        stroke-linecap="round"
                        stroke-linejoin="round"
                        stroke-width="2"
                        d="M9 19v-6a2 2 0 00-2-2H5a2 2 0 00-2-2V7a2 2 0 012-2h2a2 2 0 002 2v6a2 2 0 002 2h2a2 2 0 002-2V7a2 2 0 012-2h2a2 2 0 012 2v2a2 2 0 00-2 2h-2a2 2 0 00-2 2v6a2 2 0 01-2 2H9z"
                      />
                    </svg>
                    <span>{gettext("View Retrospective")}</span>
                  </.link>
                <% end %>
              </div>
            </div>
          </div>
        </div>
      </div>
      
<!-- Right Column - Track List (2/3) -->
      <div class="w-2/3 p-6 overflow-y-auto">
        <.vote_bar listening_session={@listening_session} open_vote={@open_vote} user_current_rating={@user_current_rating} />
        
<!-- Note Graph - Show when session started, update on report changes -->
        <%= if @show[:scores] && @listening_session.status in [:active, :stopped] do %>
          <div class="mb-6">
            <div
              id="note-graph"
              phx-hook="NoteGraph"
              data-vote-data={
                Jason.encode!(
                  case @vote_trends do
                    %Phoenix.LiveView.AsyncResult{ok?: true, result: trends} ->
                      Enum.map(trends, fn {timestamp, avg} -> [timestamp, avg] end)

                    _ ->
                      []
                  end
                )
              }
              data-vote-options={Jason.encode!(@listening_session.vote_options)}
              data-session-start={Jason.encode!(@listening_session.started_at)}
              class="rounded-lg pt-4 pr-4 pl-4"
              style="background-color: var(--color-dark-900);"
            >
              <div style="position: relative; height: 150px; width: 100%;">
                <canvas id="note-graph-canvas"></canvas>
              </div>
            </div>
          </div>
        <% end %>

        <div class="mb-6 mt-8">
          <%= if (@listening_session.album && length(@listening_session.album.tracks || []) > 0) || (@listening_session.playlist && length(@listening_session.playlist.tracks || []) > 0) do %>
            <div class="space-y-3">
              <%= for {track, index} <- Enum.with_index(
                ((@listening_session.album && @listening_session.album.tracks) || (@listening_session.playlist && @listening_session.playlist.tracks) || [])
                |> Enum.sort_by(fn track ->
                  # Current track first, then original order
                  current_track = @listening_session.current_track || @listening_session.current_playlist_track
                  if current_track && track.id == current_track.id do
                    0
                  else
                    Map.get(track, :track_number, 999)
                  end
                end), 1) do %>
                <div
                  class={[
                    "rounded-lg transition-colors overflow-hidden",
                    if(
                      (@listening_session.current_track && @listening_session.current_track.id == track.id) ||
                        (@listening_session.current_playlist_track && @listening_session.current_playlist_track.id == track.id),
                      do: if(@open_vote, do: "border-2 border-green-500/50", else: "border-2 border-orange-500/50"),
                      else: "hover:bg-gray-700"
                    )
                  ]}
                  style={
                    if(
                      (@listening_session.current_track && @listening_session.current_track.id == track.id) ||
                        (@listening_session.current_playlist_track && @listening_session.current_playlist_track.id == track.id),
                      do: "",
                      else: "background-color: var(--color-dark-900);"
                    )
                  }
                >
                  <!-- Track Row with Green Background -->
                  <div class={[
                    "p-4 transition-colors",
                    if(
                      (@listening_session.current_track && @listening_session.current_track.id == track.id) ||
                        (@listening_session.current_playlist_track && @listening_session.current_playlist_track.id == track.id),
                      do:
                        if(@open_vote,
                          do: "bg-green-600/20 hover:bg-green-600/30",
                          else: "bg-orange-600/20 hover:bg-orange-600/30"
                        ),
                      else: ""
                    )
                  ]}>
                    <div class="flex items-center justify-between">
                      <div class="flex items-center space-x-4 flex-1 min-w-0">
                        <%= if (@listening_session.current_track && @listening_session.current_track.id == track.id) ||
                              (@listening_session.current_playlist_track && @listening_session.current_playlist_track.id == track.id) do %>
                          <span class={[
                            "text-lg w-8 flex-shrink-0 font-medium",
                            if(@open_vote, do: "text-green-400", else: "text-orange-400")
                          ]}>
                            {Map.get(track, :track_number) || index}
                          </span>
                        <% else %>
                          <span class="text-lg text-gray-400 w-8 flex-shrink-0">{Map.get(track, :track_number, index)}</span>
                        <% end %>
                        <div class="flex-1 min-w-0">
                          <h4 class={[
                            "font-medium text-lg truncate",
                            if(
                              (@listening_session.current_track && @listening_session.current_track.id == track.id) ||
                                (@listening_session.current_playlist_track &&
                                   @listening_session.current_playlist_track.id == track.id),
                              do: if(@open_vote, do: "text-green-300", else: "text-orange-300"),
                              else: "text-white"
                            )
                          ]}>
                            {track.name}
                          </h4>
                          <%= if track.duration_ms do %>
                            <p class={[
                              "text-sm",
                              if(
                                (@listening_session.current_track && @listening_session.current_track.id == track.id) ||
                                  (@listening_session.current_playlist_track &&
                                     @listening_session.current_playlist_track.id == track.id),
                                do: if(@open_vote, do: "text-green-400", else: "text-orange-400"),
                                else: "text-gray-400"
                              )
                            ]}>
                              {PremiereEcouteCore.Duration.timer(track.duration_ms)}
                            </p>
                          <% end %>
                        </div>
                      </div>

                      <div class="flex items-center space-x-8 text-sm flex-shrink-0">
                        <%= if @listening_session.status == :active && 
                              ((@listening_session.current_track && @listening_session.current_track.id == track.id) ||
                               (@listening_session.current_playlist_track && @listening_session.current_playlist_track.id == track.id)) do %>
                          <div class="text-center">
                            <div class={[
                              "inline-flex items-center px-2 py-1 rounded text-xs font-medium mb-1",
                              if(@open_vote, do: "bg-green-500/20 text-green-300", else: "bg-orange-500/20 text-orange-300")
                            ]}>
                              <%= if @open_vote do %>
                                <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                                  <path
                                    fill-rule="evenodd"
                                    d="M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z"
                                    clip-rule="evenodd"
                                  />
                                </svg>
                                {gettext("Open votes")}
                              <% else %>
                                <svg class="w-3 h-3 mr-1" fill="currentColor" viewBox="0 0 20 20">
                                  <path
                                    fill-rule="evenodd"
                                    d="M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z"
                                    clip-rule="evenodd"
                                  />
                                </svg>
                                {gettext("Closed votes")}
                              <% end %>
                            </div>
                          </div>
                        <% end %>
                        <%= if @show[:votes] do %>
                          <div class="text-center">
                            <p class="text-xl font-bold text-purple-300">
                              <.async_result :let={report} assign={@report}>
                                <:loading>--</:loading>
                                <:failed>--</:failed>
                                {track_votes_count(track.id, report)}
                              </.async_result>
                            </p>
                            <p class="text-purple-400/70">{gettext("Votes")}</p>
                          </div>
                        <% end %>
                        <%= if @show[:scores] do %>
                          <div class="text-center">
                            <p class="text-xl font-bold text-pink-300">
                              <.async_result :let={report} assign={@report}>
                                <:loading>--</:loading>
                                <:failed>--</:failed>
                                <%= case track_score(track.id, report) do %>
                                  <% "N/A" -> %>
                                    <span class="text-gray-500">--</span>
                                  <% score -> %>
                                    {score}
                                <% end %>
                              </.async_result>
                            </p>
                            <p class="text-pink-400/70">{gettext("Score")}</p>
                          </div>
                          <div class="text-center">
                            <p class="text-xl font-bold text-emerald-300">
                              <.async_result :let={report} assign={@report}>
                                <:loading>--</:loading>
                                <:failed>--</:failed>
                                <%= case track_streamer_score(track.id, report) do %>
                                  <% "N/A" -> %>
                                    <span class="text-gray-500">--</span>
                                  <% score -> %>
                                    {score}
                                <% end %>
                              </.async_result>
                            </p>
                            <p class="text-emerald-400/70">{gettext("My Score")}</p>
                          </div>
                        <% end %>
                      </div>
                    </div>
                  </div>
                  
<!-- Histogram Section - show for current track when active, or all tracks when session ended -->
                  <%= if ((@listening_session.current_track && @listening_session.current_track.id == track.id) ||
                           (@listening_session.current_playlist_track && @listening_session.current_playlist_track.id == track.id)) ||
                          @listening_session.status == :stopped do %>
                    <div class="px-4 pt-4 pb-2 bg-gradient-to-br from-slate-900/30 to-gray-900/30 border-t border-slate-500/20">
                      <!-- Horizontal Histogram taking ~80% width -->
                      <div class="flex items-end justify-center h-32 mx-auto w-4/5">
                        <.async_result :let={report} assign={@report}>
                          <:loading>
                            <%= for rating <- session_vote_options(@listening_session) do %>
                              <div class="flex-1 flex flex-col items-center px-1">
                                <div class="w-full bg-gray-600 rounded-t animate-pulse" style="height: 8px"></div>
                                <span class="text-xs text-gray-400 font-medium mt-1">
                                  {rating}
                                </span>
                              </div>
                            <% end %>
                          </:loading>
                          <:failed>
                            <%= for rating <- session_vote_options(@listening_session) do %>
                              <div class="flex-1 flex flex-col items-center px-1">
                                <div class="w-full bg-red-600 rounded-t" style="height: 6px"></div>
                                <span class="text-xs text-gray-400 font-medium mt-1">
                                  {rating}
                                </span>
                              </div>
                            <% end %>
                          </:failed>
                          <% track_distribution = track_vote_distribution(track.id, report, @listening_session) %>
                          <% track_max_votes = track_distribution |> Enum.map(&elem(&1, 1)) |> Enum.max(fn -> 0 end) %>
                          <% vote_options = session_vote_options(@listening_session) %>
                          <% padding_class = bar_padding_class(length(vote_options)) %>
                          <% font_size_class = vote_count_font_size(track_max_votes) %>
                          <%= for {rating, votes} <- track_distribution do %>
                            <% bar_height = calculate_bar_height(votes, track_max_votes, 110, 6) %>
                            <% vote_position = vote_count_position(bar_height) %>
                            <div class={"flex-1 flex flex-col items-center #{padding_class} min-w-0"}>
                              <!-- Vote count above bar (on the roof) -->
                              <%= if votes > 0 && vote_position == :above do %>
                                <span class={"#{font_size_class} font-medium text-white mb-1"}>
                                  {format_vote_count(votes)}
                                </span>
                              <% end %>
                              
<!-- Bar (the building) -->
                              <div
                                class={[
                                  "w-full rounded-t transition-all duration-300 min-w-0 relative flex items-center justify-center",
                                  vote_option_color(rating, @listening_session)
                                ]}
                                style={"height: #{bar_height}px"}
                              >
                                <%= if votes > 0 && vote_position == :inside do %>
                                  <span class={"#{font_size_class} font-medium text-white"}>
                                    {format_vote_count(votes)}
                                  </span>
                                <% end %>
                              </div>
                              
<!-- Rating number -->
                              <span class="text-xs text-gray-400 font-medium mt-1">
                                {rating}
                              </span>
                            </div>
                          <% end %>
                        </.async_result>
                      </div>
                    </div>
                  <% end %>
                </div>
              <% end %>
            </div>
          <% else %>
            <div class="text-center py-16 text-gray-400">
              <svg class="w-16 h-16 mx-auto mb-4 opacity-50" fill="currentColor" viewBox="0 0 20 20">
                <path d="M18 3a1 1 0 00-1.196-.98L3 6.687a1 1 0 000 1.838l4.49 1.497L9.5 14.75a1 1 0 001.838 0L15.014 10H18a1 1 0 001-1V4a1 1 0 00-1-1z" />
              </svg>
              <p>{gettext("No tracks found for this %{source}.", source: Atom.to_string(@listening_session.source))}</p>
            </div>
          <% end %>
        </div>
      </div>
    </div>
  </div>
</Layouts.app>
